name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (eg: 0.1.0)'
        required: true

jobs:

  create_draft_release:
    runs-on: ubuntu-latest
    outputs:
      commitish: ${{ steps.commit.outputs.commitish }}
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      -
        name: Set app version
        run: |
          echo "{ \"package\": {\"version\": \"${{ github.event.inputs.version }}\" } }" > version.json          
      -
        name: Create release branch
        run: git checkout -b release/${{ github.event.inputs.version }}
      -
        name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
      -
        name: Commit manifest file
        id: commit
        run: |
          git add version.json
          git commit --message "Prepare release ${{ github.event.inputs.version }}"
          echo "::set-output name=commitish::$(git rev-parse HEAD)"
        shell: bash
      -
        name: Push new branch
        run: git push origin release/${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: Release v${{ github.event.inputs.version }}
          tag_name: v${{ github.event.inputs.version }}
          target_commitish: ${{ steps.commit.outputs.commitish }} 
    
  build_assets_and_upload:
    needs: create_draft_release
    name: Build (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.create_draft_release.outputs.commitish }}
          submodules: true     
      - 
        name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y apt libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
      - 
        name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 19.3
      - 
        name: Checkout Toolchain
        uses: dtolnay/rust-toolchain@stable
      - 
        name: Build
        run: |
          yarn && yarn build && yarn tauri build -c version.json 
      -
        name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: src-tauri/target/release/bundle/deb/*.deb*,src-tauri/target/release/bundle/appimage/*.AppImage*,src-tauri/target/release/bundle/macos/*.app*,src-tauri/target/release/bundle/dmg/*.dmg*,src-tauri/target/release/bundle/msi/*.msi*
          fail_on_unmatched_files: false
          tag_name: v${{ github.event.inputs.version }}
          draft: true
